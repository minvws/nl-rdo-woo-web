{#
    document_tabs displays two tabs with both public and not public documents.

    public_docs: a list of at least partially public documents
    not_public_docs: a list of not public documents (already_public or not_public)
    not_online_docs: a list of documents that are not (yet) online ()
    fragment: the fragment to use for the pagination links, like #documenten
#}
{% macro document_tabs(public_docs, already_public_docs, not_public_docs, not_online_docs, fragment, dossier) %}
    {% set hasPublicDocuments = public_docs | length > 0 %}
    {% set hasAlreadyPublicDocuments = already_public_docs | length > 0 %}
    {% set hasNonPublicDocuments = not_public_docs | length > 0 %}
    {% set hasNotOnlineDocuments = not_online_docs | length > 0 %}

    {% set numberOfSectionsToDisplay = [hasPublicDocuments, hasAlreadyPublicDocuments, hasNonPublicDocuments, hasNotOnlineDocuments] | filter(value => value) | length %}
    {% set hasTabs = numberOfSectionsToDisplay > 1 %}

    {% if hasTabs %}
        <ul class="woo-tab-list" role="tablist" aria-label="{{ 'global.documents' | trans }}">
            {% if hasPublicDocuments %}
                <li class="woo-tab-list__item" role="presentation">
                    {{ _self.documents_tab_button(1, true, "public.documents.match_request" | trans) }}
                </li>
            {% endif %}
            {% if hasAlreadyPublicDocuments %}
                <li class="woo-tab-list__item" role="presentation">
                    {{ _self.documents_tab_button(2, not hasPublicDocuments, "public.documents.already_public_short" | trans) }}
                </li>
            {% endif %}
            {% if hasNonPublicDocuments %}
                <li class="woo-tab-list__item" role="presentation">
                    {{ _self.documents_tab_button(3, not hasPublicDocuments and not hasAlreadyPublicDocuments, "public.documents.not_made_public" | trans) }}
                </li>
            {% endif %}
            {% if hasNotOnlineDocuments %}
                <li class="woo-tab-list__item" role="presentation">
                    {{ _self.documents_tab_button(4, not hasPublicDocuments and not hasAlreadyPublicDocuments and not hasNonPublicDocuments, "public.documents.not_yet_online" | trans) }}
                </li>
            {% endif %}
        </ul>

        {% if hasPublicDocuments %}
            {{ _self.documents_tab_content(1, false, public_docs, "public.documents.match_request", dossier) }}
        {% endif %}

        {% if hasAlreadyPublicDocuments %}
            {{ _self.documents_tab_content(2, hasPublicDocuments, already_public_docs, "public.documents.already_public_short", dossier) }}
        {% endif %}

        {% if hasNonPublicDocuments %}
            {{ _self.documents_tab_content(3, hasPublicDocuments or hasAlreadyPublicDocuments, not_public_docs, "public.documents.not_made_public", dossier) }}
        {% endif %}

        {% if hasNotOnlineDocuments %}
            {{ _self.documents_tab_content(4, hasPublicDocuments or hasAlreadyPublicDocuments or hasNonPublicDocuments, not_online_docs, "public.documents.not_yet_online", dossier) }}
        {% endif %}
    {% else %}
        {{ _self.documents_sortable_table(public_docs, "public.documents.match_request", fragment, dossier) }}
        {{ _self.documents_sortable_table(already_public_docs, "public.documents.already_public_short", fragment, dossier) }}
        {{ _self.documents_sortable_table(not_public_docs, "public.documents.not_made_public", fragment, dossier) }}
        {{ _self.documents_sortable_table(not_online_docs, "public.documents.not_yet_online", fragment, dossier) }}
    {% endif %}
{% endmacro %}


{% macro documents_tab_button(tabNumber, isActive, title) %}
    <button
        aria-controls="tab{{ tabNumber }}"
        aria-label="{{ title }}"
        {% if isActive %}
        aria-selected="true"
        {% endif %}
        class="woo-tab-button"
        data-e2e-name="tab-button-{{ tabNumber }}"
        data-tab-target="#tabcontrol-{{ tabNumber }}"
        id="tabcontrol-{{ tabNumber }}"
        role="tab"
    >{{ title }}</button>
{% endmacro %}

{% macro documents_tab_content(tabNumber, isHidden, documents, title, dossier) %}
    <div id="tab{{ tabNumber }}" data-e2e-name="tab{{ tabNumber }}" data-tab-content role="tabpanel" aria-labelledby="tabcontrol-{{ tabNumber }}" {% if isHidden %}hidden{% endif %}>
        {{ _self.documents_sortable_table(documents, title, '#tabcontrol-' ~ tabNumber, dossier) }}
    </div>
{% endmacro %}

{#
    documents_sortable_table displays a sortable table with the provided documents.

    documents: a list of documents to display
    tableTitleTranslationKey: the translation key of the table caption
#}
{% macro documents_sortable_table(documents, tableTitleTranslationKey, fragment, dossier) %}
    {% if documents | length > 0 %}
        <div class="woo-responsive-table">
            <table class="woo-table">
                <caption class="sr-only">
                    <span>{{ tableTitleTranslationKey | trans() }}</span>
                    <span>{{ 'public.global.sortable' | trans() }}</span>
                </caption>
                <thead>
                    <tr>
                        {{ knp_pagination_sortable(documents, 'global.document_number' | trans | trans, 'doc.documentNr', { thClassName: "x-min-w-36 x-w-36", 'fragment': fragment }) }}
                        <th class="x-min-w-12 x-w-12" scope="col">{{ 'global.document_type' | trans() }}</th>
                        {{ knp_pagination_sortable(documents, 'global.document_name' | trans() | trans, 'doc.fileInfo.name', { 'fragment': fragment }) }}
                        {{ knp_pagination_sortable(documents, 'global.date' | trans() | trans, 'doc.documentDate', { thClassName: '!text-right x-min-w-40 w-40', 'fragment': fragment }) }}
                    </tr>
                </thead>
                {{ _self.documents_table_tbody(documents, dossier) }}
            </table>
        </div>
        {% if documents.pageCount is defined and documents.pageCount > 1 %}
        <div class="pt-6">
            {{ knp_pagination_render(documents, null, {}, { 'fragment': fragment }) }}
        </div>
        {% endif %}
    {% endif %}
{% endmacro %}

{#
    documents_table displays a table with the provided documents.

    documents: a list of documents to display
    tableTitleTranslationKey: the translation key of the table caption
#}
{% macro documents_table(documents, tableTitleTranslationKey) %}
    {% if documents | length > 0 %}
        <div class="woo-responsive-table">
            <table class="woo-table">
                <caption class="sr-only">{{ tableTitleTranslationKey | trans() }}</caption>
                <thead>
                    <tr>
                        <th scope="row">{{ 'global.document_number' | trans() }}</th>
                        <th scope="row">{{ 'global.document_type' | trans() }}</th>
                        <th scope="row">{{ 'global.name' | trans() }}</th>
                        <th class="text-right" scope="row">{{ 'global.date' | trans() }}</th>
                    </tr>
                </thead>
                {{ _self.documents_table_tbody(documents) }}
            </table>
        </div>
    {% endif %}
{% endmacro %}

{#
    documents_table_tbody displays a table body with the provided documents.

    documents: a list of documents to display
    dossier: the dossier to which the documents belong
#}
{% macro documents_table_tbody(documents, dossier) %}
    <tbody>
    {% for doc in documents %}
        <tr>
            <td class="woo-table-cell-light">
                {{ doc.documentId }}
            </td>
            <td>
                {% set documentType = doc.judgement is defined and doc.judgement.isAlreadyPublic ? 'web' : doc.fileInfo.sourceType %}
                <twig:Public:FileIcon type="{{ documentType }}" />
                <span class="sr-only">{{ ("public.documents.file_type." ~ doc.fileInfo.sourceType) | trans }}</span>
            </td>
            <td>
                <div class="woo-readable-width">
                    <a class="woo-a break-all" href="{{ path('app_document_detail', { prefix: dossier.documentPrefix ?? doc.dossiers.first.documentPrefix, dossierId: dossier.dossierNr ?? doc.dossiers.first.dossierNr, documentId: doc.documentNr }) }}">{{ doc.fileInfo.name }}</a>
                </div>
            </td>
            <td class="text-right whitespace-nowrap">
                {% if doc.documentDate is not null %}
                    <time datetime="{{ doc.documentDate | date("Y-m-d") }}">{{ doc.documentDate | format_date('long') }}</time>
                {% else %}
                    -
                {% endif %}
            </td>
        </tr>
    {% endfor %}
    </tbody>
{% endmacro %}

{#
    document_ground displays a ground with a possible link pointing to more information.

    ground: a list of documents to display
#}
{% macro document_ground(ground) %}
    {% if get_citation_type(ground) == "woo" %}
        <a class="woo-a" href="https://wetten.overheid.nl/BWBR0045754/2022-08-01#Hoofdstuk5">{{ ground }} {{ ground|classification }}</a>
    {% elseif get_citation_type(ground) == "wob" %}
        <a class="woo-a" href="https://wetten.overheid.nl/BWBR0005252/2018-07-28#HoofdstukV">{{ ground }} {{ ground|classification }}</a>
    {% else %}
        {{ ground }}
    {% endif %}
{% endmacro %}

{#
    documents_section displays a section with a title and a table of documents

    documents: a list of documents to display
    titleTranslationKey: the translation key of the title
#}
{% macro documents_section(documents, titleTranslationKey, isTableSortable = true) %}
    {% if documents | length > 0 %}
        <div class="mt-16" data-e2e-name="documents-section">
            <h2 class="woo-h2 woo-h2-spacing">{{ titleTranslationKey | trans }}</h2>

            {% if isTableSortable %}
                {{ _self.documents_sortable_table(documents, titleTranslationKey) }}
            {% else %}
                {{ _self.documents_table(documents, titleTranslationKey) }}
            {% endif %}
        </div>
    {% endif %}
{% endmacro %}

{#
    history_section displays a section with a title and a table of history

    history: a list of history to display
    titleTranslationKey: the translation key of the title
#}
{% macro history_section(history, titleTranslationKey) %}
     {% if history | length > 0 %}
        <div class="mt-16">
            <h2 class="woo-h2 woo-h2-spacing">{{ titleTranslationKey | trans }}</h2>

            <div class="woo-responsive-table" data-e2e-name="document-history">
                <table class="woo-table">
                    <caption class="sr-only">{{ titleTranslationKey | trans }}</caption>
                    <thead>
                        <th class="w-64 min-w-64" scope="col">{{ 'global.date' | trans() }}</th>
                        <th class="min-w-64" scope="col">{{ "global.action" | trans() }}</th>
                    </thead>
                    <tbody>
                    {% for entry in history %}
                        {% set tr = history_trans(entry, "public") %}
                        {% if tr is not empty %}
                            <tr>
                                <td class="woo-table-cell-light">{{ entry.createdDt | format_datetime(pattern="d LLLL y H:mm") }}</td>
                                <td>
                                    {{ tr }}
                                </td>
                            </tr>
                        {% endif %}
                    {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    {% endif %}
{% endmacro %}

{% macro document_refers_to(documents) %}
    {% for document in documents %}
        {% if loop.last and loop.index > 1 %}{{ "global.and" | trans }}{% elseif not loop.first %}, {% endif %} {{ _self.document_url(document) }}
    {% endfor %}
    {{
        "public.documents.refers_to" | trans({
            "{has_or_have}": "public.global.has_or_have" | trans({ 'count': documents | length })
        })
    }}
{% endmacro %}

{% macro document_url(document) %}
    <a class="woo-a" href="{{ path('app_document_detail', { prefix: document.dossiers.first.documentPrefix, dossierId: document.dossiers.first.dossierNr, documentId: document.documentNr }) }}">{{ document.fileInfo.name }}</a>
{% endmacro %}
