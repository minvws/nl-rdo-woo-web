{% extends 'tailwind_2_layout.html.twig' %}

{%- block form_start -%}
    {%- set attr = attr|merge({ novalidate: '' }) -%}
    {{- parent() -}}
{%- endblock form_start -%}

{%- block choice_widget_expanded -%}
    <fieldset>
        <legend class="bhr-legend">{{ form.vars.label | trans }}</legend>
        {{- form_help(form) -}}
        {{- form_errors(form) -}}

        {%- for child in form %}
            <div class="bhr-choice-row">
                <span>{{- form_widget(child) -}}</span>
                <div class="flex flex-col">
                    {{- form_label(child, null, { 'label_attr': { 'class': 'bhr-choice-label', displayIsOptional: false }, translation_domain: choice_translation_domain }) -}}
                    {{- form_help(child, {'help_attr': {'class': 'bhr-form-help text-sm pb-2'}}) -}}
                </div>
            </div>
        {% endfor -%}
    </fieldset>
{%- endblock choice_widget_expanded -%}

{%- block choice_widget_collapsed -%}
    {%- if required and placeholder is none and not placeholder_in_choices and not multiple and (attr.size is not defined or attr.size <= 1) -%}
        {% set required = false %}
    {%- endif -%}
    <div class="bhr-select">
        {%- set attr = attr|merge(attr, { class: 'bhr-select__select' ~ ( errors|length > 0 ? ' bhr-select__select--invalid' : '' ) ~ ' min-w-[50%] ' ~ attr.class|default('') }) -%}
        <select {{ block('widget_attributes') }}{% if multiple %} multiple="multiple"{% endif %}>
            {%- if placeholder is not none -%}
                <option value=""{% if placeholder_attr|default({}) %}{% with { attr: placeholder_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}{% if required and value is empty %} selected="selected"{% endif %}>{{ placeholder != '' ? (translation_domain is same as(false) ? placeholder : placeholder|trans({}, translation_domain)) }}</option>
            {%- endif -%}
            {%- if preferred_choices|length > 0 -%}
                {% set options = preferred_choices %}
                {% set render_preferred_choices = true %}
                {{- block('choice_widget_options') -}}
                {%- if choices|length > 0 and separator is not none -%}
                    <option disabled="disabled">{{ separator }}</option>
                {%- endif -%}
            {%- endif -%}
            {%- set options = choices -%}
            {%- set render_preferred_choices = false -%}
            {{- block('choice_widget_options') -}}
        </select>
    </div>
{%- endblock choice_widget_collapsed -%}

{%- block form_errors -%}
    <twig:Admin:InputErrors id="{{ id ~ "-error" }}" errors="{{ errors }}" />
{%- endblock form_errors -%}

{%- block form_help -%}
    {%- set help_attr = help_attr|merge({ class: help_attr.class|default(help_class|default('bhr-form-help text-lg pb-2')) }) -%}
    {{- parent() -}}
{%- endblock form_help -%}

{% block form_help_content -%}
    {%- if translation_domain is same as(false) -%}
        {%- if help_html is same as(false) -%}
            {{- help -}}
        {%- else -%}
            {{- help|raw -}}
        {%- endif -%}
    {%- else -%}
        {%- if help_html is same as(false) -%}
            {{- help|trans(help_translation_parameters, translation_domain) -}}
        {%- else -%}
            {{- help|trans(help_translation_parameters, translation_domain)|raw -}}
        {%- endif -%}
    {%- endif -%}
{%- endblock form_help_content %}

{%- block form_label -%}
    {% if label is not same as(false) -%}
        {%- set label_attr = label_attr|merge({ class: label_attr.class|default(label_class|default('bhr-label')) }) -%}
        {% if not compound -%}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {%- endif -%}
        {% set displayIsOptional = required is not same as (true) and (label_attr.displayIsOptional ?? true) is not same as (false) %}
        <label {% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>
            {{ label | trans }}{% if displayIsOptional %} <span class="font-normal">({{'global.optional' | trans() }})</span>{% endif %}
        </label>
    {%- endif -%}
{%- endblock form_label -%}

{%- block form_fieldset -%}
    <fieldset>
        <legend class="bhr-legend">
            {{ row_attr | default([])['data-legend'] | default('') | trans() }}
            {% set isOptional = (row_attr|default([])['data-required'] ?? true) is same as (false) %}
            {% if isOptional %}
                <span class="font-normal">({{'global.optional' | trans() }})</span>
            {% endif %}
        </legend>

        <div class="flex gap-4">
            {% for item in field_set_fields|split(' ') %}
            <div>
                {{- form_label(form.parent.children[item], null, { label_attr: { displayIsOptional: false }, label_class: 'block text-bhr-gray-700 text-lg mb-1' }) -}}
                {{- form_help(form.parent.children[item]) -}}
                {{- form_errors(form.parent.children[item]) -}}
                {{- form_widget(form.parent.children[item], widget_attr) -}}
            </div>
            {% endfor %}
        </div>
    </fieldset>
{%- endblock -%}

{%- block file_widget -%}
    {% set allowMultiple = 'multiple' in attr|default([])|keys %}

    <div {{ vue_component('GenericController', {
        componentName: 'UploadArea',

        allowMultiple: allowMultiple,
        fileLimits: [
            {
                mimeTypes: attr.accept|default(['application/pdf']),
                label: attr.typeName|default('PDF'),
            },
        ],
        id: id,
        name: full_name,
    }) }}>
        <div class="min-h-56"></div>
    </div>
{%- endblock file_widget -%}

{%- block form_row -%}
    {%- set row_attr = row_attr|merge({ class: ('bhr-form-row ' ~ (errors|length > 0 ? 'bhr-form-row--invalid ' : '') ~ row_attr.class|default(''))|trim }) -%}
    {%- set widget_attr = {} -%}
    {% if errors|length > 0 %}
        {%- set widget_attr = {attr: {'aria-describedby': id ~"-error", 'aria-invalid': 'true' }} -%}
    {%- elseif help is not empty -%}
        {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
    {%- endif -%}

    {% if(row_attr['data-fieldset'] is defined) %}
        {%- set field_set_fields = row_attr['data-fieldset'] -%}
        {% set row_attr = row_attr|filter((value, key) => key != 'data-fieldset') %}
    {% endif %}
    {% set isFieldset = expanded ?? false %}
    {% if not form.vars.attr.no_container|default(false) %}
        <div{% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>
    {% endif %}
        {% if field_set_fields is defined %}
            {{ block('form_fieldset') }}
        {% elseif isFieldset %}
            {{- form_widget(form, widget_attr) -}}
        {% else %}
            {{- form_label(form) -}}
            {{- form_help(form) -}}
            {{- form_errors(form) -}}
            {{- form_widget(form, widget_attr) -}}
        {% endif %}
    {% if not form.vars.attr.no_container|default(false) %}
        </div>
    {% endif %}
{%- endblock form_row -%}

{%- block button_row -%}
    {%- set row_attr = row_attr|merge({ class: '' ~ row_attr.class|default('') }) -%}
    {% if attr['data-first-button'] is defined %}
        <div{% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>
    {% endif %}
        {{- form_widget(form) -}}
    {% if attr['data-last-button'] is defined %}
        </div>
    {% endif %}
{%- endblock button_row -%}

{%- block checkbox_row -%}
    {%- set row_attr = row_attr|merge({ class: ('bhr-form-row ' ~ (errors|length > 0 ? 'bhr-form-row--invalid' : '') ~ row_attr.class|default(''))|trim }) -%}
    {%- set widget_attr = {} -%}
    {%- if help is not empty -%}
        {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
    {%- endif -%}
    <div{% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>
        {{- form_errors(form) -}}
        <div class="flex">
            {{- form_widget(form, widget_attr) -}}
            <div class="flex flex-col">
                {{- form_label(form, null, { 'label_attr': {'class': 'bhr-choice-label', displayIsOptional: false }}) -}}
                {{- form_help(form, {'help_attr': {'class': 'bhr-form-help text-sm pb-2'}}) -}}
            </div>
        </div>
    </div>
{%- endblock checkbox_row -%}

{% block button_attributes %}
    {%- set attr = attr|merge({ class: 'mr-4 ' ~ attr.class|default('bhr-btn-filled-primary')}) -%}
     id="{{ id }}" name="{{ full_name }}"
    {% for attrname, attrvalue in attr %}{% if attrvalue != 'data-first-button' and attrvalue != 'data-last-button'%} {{ attrname }}="{{ attrvalue }}"{%endif%}{% endfor %}
{% endblock button_attributes %}

{%- block textarea_widget -%}
    {%- set attr = attr|merge({ class: 'bhr-textarea ' ~ (errors|length > 0 ? 'bhr-textarea--invalid ' : '') }) -%}
    {% if attr['data-is-markdown'] is defined %}
        <div {{ vue_component('GenericController', {
            componentName: 'MarkdownEditor',

            id: id,
            name: full_name,
            value: value,
        }) }}>
            <div class="min-h-14"></div>
        </div>
    {% else %}
        <textarea {{ block('widget_attributes') }}>{{ value }}</textarea>
    {% endif %}
{%- endblock textarea_widget -%}

{%- block widget_attributes -%}
    {# Make the widget_errors_class a space to not fill it with some defaults defined in the functionality of this form package #}
    {% set widget_errors_class = widget_errors_class|default(' ') %}
    {{- parent() -}}
{%- endblock widget_attributes -%}

{%- block checkbox_widget -%}
    {%- set widget_class = widget_class|default('bhr-choice-input bhr-choice-input--checkbox') -%}
    <input type="checkbox" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %}>
{%- endblock checkbox_widget -%}

{%- block radio_widget -%}
    {%- set widget_class = widget_class|default('bhr-choice-input bhr-choice-input--radio') -%}
    <input type="radio" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %}>
{%- endblock radio_widget -%}

{%- block form_widget_simple -%}
    {%- set type = type|default('text') -%}
    {%- set widget_errors_class = widget_errors_class|default('bhr-input-text--invalid') -%}
    {%- if type == 'range' or type == 'color' -%}
        {# Attribute "required" is not supported #}
        {%- set required = false -%}
    {%- endif -%}
    {%- if type == 'text' or type == 'email' -%}
        {%- set attr = attr|merge({ class: 'bhr-input-text ' ~ attr.class|default('w-3/6 ') }) -%}
    {%- endif -%}
    {%- if type == 'password' -%}
        {%- set attr = attr|merge({ class: 'bhr-input-text ' ~ attr.class|default('w-full ') }) -%}
    {%- endif -%}
    <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}>
{%- endblock form_widget_simple -%}

{%- block date_widget -%}
    {%- set attr = attr|merge({ class: 'bhr-input-date w-40' ~ attr.class|default('') }) -%}
    <input type="{{ type }}" {{ block('widget_attributes') }}{% if value is not empty %} value="{{ value }}"{% endif %}>
{%- endblock date_widget -%}
