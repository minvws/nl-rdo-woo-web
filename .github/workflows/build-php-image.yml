name: Build PHP image

on:
  workflow_dispatch:
    inputs:
      image-tag:
        description: 'The tag of the image to build'
        required: true

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ubuntu-24.04-buildx-${{ matrix.platform }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            ubuntu-24.04-buildx-${{ matrix.platform }}-${{ github.ref_name }}-
            ubuntu-24.04-buildx-${{ matrix.platform }}-
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.platform }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Image name
        id: image_name
        uses: ASzc/change-string-case-action@v6
        with:
          string: ghcr.io/${{ github.repository }}/php
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.image_name.outputs.lowercase }}
          tags: type=raw,value=${{ inputs.image-tag }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: docker/app/Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          outputs: type=image,name=${{ steps.image_name.outputs.lowercase }},push-by-digest=true,name-canonical=true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
        # Temp fix?
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  merge:
    needs: build
    name: Merge Images
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Image name
        id: image_name
        uses: ASzc/change-string-case-action@v6
        with:
          string: ghcr.io/${{ github.repository }}/php
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.image_name.outputs.lowercase }}
          tags: type=raw,value=${{ inputs.image-tag }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf '${{ steps.image_name.outputs.lowercase }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ steps.image_name.outputs.lowercase }}:${{ steps.meta.outputs.version }}
