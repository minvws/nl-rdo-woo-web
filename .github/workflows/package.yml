name: Create release package

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      REPO_READ_ONLY_TOKEN:
        required: true

env:
  GH_TOKEN: ${{ secrets.REPO_READ_ONLY_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup PHP
        uses: ./.github/actions/setup-php
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node
        uses: ./.github/actions/setup-node
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run build task
        run: npm run build
      - name: Build the docs
        run: task docs:sphinx:build:ci
      - name: Clean build
        run: |
          rm -r node_modules .git var/cache var/log || true
          mkdir -p var/log
          mkdir -p var/cache
      - name: Create version.json
        run: |
          echo "{ \"version\": \"${{ env.RELEASE_VERSION }}\", \"git_ref\": \"$GITHUB_SHA\"}" > public/version.json
      - name: Create tar
        run: tar -czf woo-web_${{ env.RELEASE_VERSION }}.tar.gz ./config ./public/ ./src/ ./templates ./translations ./vendor/ ./var/cache ./var/log ./worker-*.conf ./bin/console
      - name: Upload release tar
        uses: actions/upload-artifact@v4
        with:
          name: woo-web_${{ env.RELEASE_VERSION }}
          path: woo-web_${{ env.RELEASE_VERSION }}.tar.gz
