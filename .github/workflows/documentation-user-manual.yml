name: Generate Documentation - Gebruikershandleiding

on:
  workflow_dispatch:
  push:
    tags:
      - v*

jobs:
  publish:
    runs-on: ubuntu-latest

    name: create documentation (pdf)

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set default release version with latest tag
        run:
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "RELEASE_VERSION=$LATEST_TAG" >> $GITHUB_ENV

      - name: Set release version based on tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v3
        with:
          files: "docs/gebruikershandleiding/*.md"

      - name: Concat manual files
        if: steps.check_files.outputs.files_exists == 'true'
        run: sed -e '$s/$/\n/' -s docs/gebruikershandleiding/*.md > "docs/gebruikershandleiding/Gebruikershandleiding ${{ env.RELEASE_VERSION }}.md"

      - name: Update template
        run: sed -i "s/{{{version}}}/$RELEASE_VERSION/g" .github/workflows/manual/pdf_template.html
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

      - name: Publish document
        if: steps.check_files.outputs.files_exists == 'true'
        uses: baileyjm02/markdown-to-pdf@v1.2.0
        with:
          input_path: "docs/gebruikershandleiding/Gebruikershandleiding ${{ env.RELEASE_VERSION }}.md"
          images_dir: docs/gebruikershandleiding/images
          output_dir: pdfs
          image_import: ./images
          build_html: false
          table_of_contents: true
          template: .github/workflows/manual/pdf_template.html

      - name: Upload manual documentation (pdf)
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v4
        id: upload-document
        with:
          name: Gebruikershandleiding
          path: pdfs
