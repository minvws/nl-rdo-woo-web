framework:
    messenger:
        buses:
            command_bus:
                middleware:
                    - doctrine_ping_connection
#        failure_transport: failed
        serializer:
            default_serializer: messenger.transport.symfony_serializer
            symfony_serializer:
                format: json
                context: { }

        transports:
            high:
                dsn: '%env(HIGH_TRANSPORT_DSN)%'
                options:
                    auto_setup: true
                retry_strategy:
                    max_retries: 3
                    multiplier: 2

            esupdater:
                dsn: '%env(ESUPDATER_TRANSPORT_DSN)%'
                options:
                    auto_setup: true
                retry_strategy:
                    max_retries: 3
                    multiplier: 2

            ingestor:
                dsn: '%env(INGESTOR_TRANSPORT_DSN)%'
                options:
                    auto_setup: true
                retry_strategy:
                    max_retries: 3
                    multiplier: 2

            global:
                dsn: '%env(GLOBAL_TRANSPORT_DSN)%'
                options:
                    auto_setup: true
                retry_strategy:
                    max_retries: 3
                    multiplier: 2

        routing:
            App\Message\InitiateElasticRolloverMessage: high
            App\Message\SetElasticAliasMessage: high
            App\Message\InventoryProcessRunMessage: high
            App\Message\GenerateSanitizedInventoryMessage: high
            App\Message\ProcessDocumentMessage: high                   # Processes doc uploads (not the actual ingest). Higher prio for user feedback.

            App\Message\IngestDossiersMessage: ingestor                # Ingests all dossiers
            App\Message\IngestDossierMessage: ingestor                 # Ingests a single dossier
            App\Message\IngestAudioMessage: ingestor                   # Ingests an audio file
            App\Message\IngestPdfMessage: ingestor                     # Ingests a complete PDF document and fires a message for each page
            App\Message\IngestPdfPageMessage: ingestor                 # Ingests a single PDF page from a PDF document
            App\Message\ReplaceDocumentMessage: ingestor
            App\Message\RemoveInventoryAndDocumentsMessage: ingestor
            App\Message\IngestDecisionMessage: ingestor
            App\Message\IngestMetadataOnlyMessage: ingestor
            App\Message\GenerateInquiryInventoryMessage: ingestor
            App\Message\GenerateInquiryArchivesMessage: ingestor

            App\Message\UpdateDossierMessage: esupdater                # Updates the dossier in the elastic index
            App\Message\UpdateDepartmentMessage: esupdater             # Updates the dossier in the elastic index
            App\Message\RemoveDossierMessage: esupdater                # Removes a dossier in the elastic index
            App\Message\RemoveDocumentMessage: esupdater

            App\Message\GenerateArchiveMessage: global                 # Generates a ZIP archive of the dossier
            App\Message\UpdateDossierArchivesMessage: global           # Removes existing archives for a dossier and generates a new complete archive
