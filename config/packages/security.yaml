security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        balie:
            pattern: ^/balie
            form_login:
                provider: app_user_provider
                login_path: app_login
                check_path: app_login
            logout:
                path: app_logout
                target: app_home
            two_factor:
                auth_form_path: 2fa_login
                check_path: 2fa_login_check
        main:
            pattern: ^/
            security: false

    role_hierarchy:
        ROLE_SUPER_ADMIN: ROLE_BALIE
        ROLE_GLOBAL_ADMIN: ROLE_BALIE
        ROLE_ORGANISATION_ADMIN: ROLE_BALIE
        ROLE_DOSSIER_ADMIN: ROLE_BALIE
        ROLE_VIEW_ACCESS: ROLE_BALIE

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/balie/login, roles: PUBLIC_ACCESS }
        - { path: ^/balie/logout, roles: PUBLIC_ACCESS }
        - { path: ^/balie/2fa, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }
        - { path: ^/balie/2fa_check, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }
        - { path: ^/balie/elastic, roles: ROLE_SUPER_ADMIN }
        - { path: ^/balie/change-password, roles: ROLE_BALIE }
        - { path: ^/balie, roles: ROLE_BALIE }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
